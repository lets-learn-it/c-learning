{
  // Place your c-learning workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  "competative-programming-c": {
    "scope": "c",
    "prefix": "cpc",
    "body": [
      "#include <stdio.h>",
      "#include <time.h>",
      "",
      "int main(int argc, char const *argv[]) {",
      "  /////////////////////////////////////////////////////",
      "  freopen(\"input.txt\", \"r\", stdin);",
      "  freopen(\"output.gen.txt\", \"w\", stdout);",
      
      "  clock_t start = clock();",
      "  ////////////////// ACTUAL PROGRAM ///////////////////",
      "",
      "  ${1}",
      "",
      "  /////////////////////////////////////////////////////",
      "  clock_t end = clock();",
      "  fprintf(stderr, \"Time: %f\\n\", (double) (end - start) / CLOCKS_PER_SEC);",
      "  return 0;",
      "}"
    ],
    "description": "competative programming basic template"
  }
}